import { fail, redirect } from '@sveltejs/kit';
import { message, superValidate } from 'sveltekit-superforms/server';
import { z } from 'zod';
import type { Actions, PageServerLoad } from './$types';

// TOOD: Fill this in.
const schema = z.object({
  {{ range $index, $element:= .Fields }}{{ if ne $index 0}}
  {{ end }}{{.Name}}: z.string().nonempty(),{{ end }}
});

export const load: PageServerLoad = async () => {
  const form = await superValidate(schema);
  return { form };
}

export const actions: Actions = {
  default: async ({ reqeust }) => {
    const form = await superValidate(request, schema);

    if (!form.valid) {
      return fail(400, { form });
    }

    try {
      // TODO: Do something with the data
    } catch (e) {
      return message(form, 'Something went wrong!', {
        status: 500,
      });
    }

    throw redirect(303, '/'); // TODO: Redirect URL
  }
}
